{{setTitle     "Forms"}}
{{setSubTitle  "Simple CSS for HTML Forms"}}
{{setActiveNav "forms"}}

{{> header}}

<div class="content">

    <h2 class="content-subhead">Default Form</h2>
    <p>
        To create a default inline form, add the {{code "pure-form"}} classname to any {{code "<form>"}} element.
    </p>

  {{#prefixIds "default"}}
    {{> forms/default}}
  {{/prefixIds}}

  {{#code}}
    {{> forms/default}}
  {{/code}}


    <h2 class="content-subhead" id="stacked-form">Stacked Form</h2>
    <p>
        To create a stacked form with input elements below the labels, add the {{code "pure-form-stacked"}} classname to a {{code "<form>"}} element alongside {{code "pure-form"}}.
    </p>

  {{#prefixIds "stacked"}}
    {{> forms/stacked}}
  {{/prefixIds}}

  {{#code}}
    {{> forms/stacked}}
  {{/code}}


    <h2 class="content-subhead">Aligned Form</h2>
    <p>
    To create an aligned form, add the {{code "pure-form-aligned"}} classname to a {{code "<form>"}} element alongside {{code "pure-form"}}. In an aligned form, the labels are right-aligned against the form input controls, but on smaller screens revert to a <a href="#stacked-form">stacked form</a>.</p>

  {{#prefixIds "aligned"}}
    {{> forms/aligned}}
  {{/prefixIds}}

  {{#code}}
    {{> forms/aligned}}
  {{/code}}

    <h2 class="content-subhead">Multi-Column Form (with Pure Grids)</h2>
    <p>
        To create multi-column forms, include your form elements within a <a href="../grids/">Pure Grid</a>. The following example uses Pure Grids with a stacked form.
    </p>

  {{#prefixIds "multi"}}
    {{> forms/multi}}
  {{/prefixIds}}

  {{#code}}
    {{> forms/multi}}
  {{/code}}

    <h2 class="content-subhead">Grouped Inputs</h2>
    <p>
        To group sets of text-based input elements, wrap them in a {{code "<fieldset>"}} element with a {{code "pure-group"}} classname.
        Grouped inputs work well for sign-up forms and look natural on mobile devices.
    </p>

  {{#prefixIds "grouped"}}
    {{> forms/grouped}}
  {{/prefixIds}}

  {{#code}}
    {{> forms/grouped}}
  {{/code}}


    <h2 class="content-subhead">Input Sizing</h2>
    <p>
        Input elements have fluid width sizes in a syntax that is similar to <a href="../">Pure Grids</a>. You can apply a {{code "pure-input-*"}} class to these elements.
    </p>

  {{#prefixIds "input-size"}}
    {{> forms/input-size}}
  {{/prefixIds}}

  {{#code}}
    {{> forms/input-size}}
  {{/code}}

    <p>
        You can control input sizing even further by wrapping them in grid containers. In the example below, the {{code "<input>"}} elements have a {{code "pure-input-1"}} class, but are wrapped in a {{code "<div>"}} with a specific grid class.
    </p>

  {{#prefixIds "input-grid"}}
    {{> forms/input-grid}}
  {{/prefixIds}}

  {{#code}}
    {{> forms/input-grid}}
  {{/code}}


    <h2 class="content-subhead">Required Inputs</h2>
    <p>
        To mark a form control as required, add the {{code "required"}} attribute. 
    </p>

  {{#prefixIds "invalid"}}
    {{> forms/invalid}}
  {{/prefixIds}}

  {{#code}}
    {{> forms/invalid}}
  {{/code}}


    <h2 class="content-subhead">Disabled Inputs</h2>
    <p>
        To disable a form control, add the {{code "disabled"}} attribute. 
    </p>

  {{#prefixIds "disabled"}}
    {{> forms/disabled}}
  {{/prefixIds}}

  {{#code}}
    {{> forms/disabled}}
  {{/code}}


    <h2 class="content-subhead">Rounded Inputs</h2>
    <p>
        To display a form control with rounded corners, add the {{code "pure-input-rounded"}} classname. 
    </p>

  {{#prefixIds "rounded"}}
    {{> forms/rounded}}
  {{/prefixIds}}

  {{#code}}
    {{> forms/rounded}}
  {{/code}}


    <h2 class="content-subhead">Checkboxes and Radios</h2>
    <p>
        To normalize and align checkboxes and radio inputs, add the {{code "pure-checkbox"}} or {{code "pure-radio"}} classname.
    </p>

  {{#prefixIds "checkbox-radio"}}
    {{> forms/checkbox-radio}}
  {{/prefixIds}}

  {{#code}}
    {{> forms/checkbox-radio}}
  {{/code}}
</div>
