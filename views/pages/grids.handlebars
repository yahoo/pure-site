{{setTitle     "Responsive Grids"}}
{{setSubTitle  "A fully customizable responsive grid"}}
{{setActiveNav "grids"}}

{{addLocalCSS "/css/grids.css"}}

{{> header}}

<div class="content">

    {{sectionHeading "Introduction to Pure Grids"}}

    <p>
        Pure Grids are easy to work with, and very powerful. There are a few simple concepts to keep in mind:
    </p>

    <dl>
        <dt>Grid classes vs. unit classes</dt>
        <dd>
            Pure Grids consist of two types of classes: grid classes ({{code "pure-g"}} or {{code "pure-g-r"}}) and unit classes ({{code "pure-u"}} or {{code "pure-u-*"}})
        </dd>

        <dt>The widths of the units are fractions</dt>
        <dd>
            Units have various class names that represent their widths. For example, {{code "pure-u-1-2"}} has a width of 50%, whereas {{code "pure-u-1-5"}} would have a width of 20%.
        </dd>

        <dt>All child elements of a grid must be units</dt>
        <dd>
            Child elements contained within an element with a {{code "pure-g"}} classname <em>must</em> be a grid unit with a {{code "pure-u"}} or {{code "pure-u-*"}} classname.
        </dd>

        <dt>Content goes inside grid units<dt>
        <dd>
            All content which is visible to people needs to be contained inside a grid unit. This ensures that the content will be rendered properly.
        </dd>
    </dl>

    <aside>
        <p>
            If you're using custom fonts in your project, be sure to check out the section on <a href="#using-grids-with-custom-fonts">using Grids with custom fonts</a>.
        </p>
    </aside>

    <p>
        Let's start with a simple example. Here's a grid with three columns:
    </p>

    {{#code}}
    {{> grids/intro}}
    {{/code}}


    {{sectionHeading "Pure Responsive Grids"}}

    <p>
        Pure Responsive Grids builds on top of the base Grids. It adds a single new classname called {{code "pure-g-r"}} (the "r" stands for responsive, you see). You can use this instead of using {{code "pure-g"}} as you normally do. All elements with a classname of {{code "pure-u-*-*"}} will automatically become responsive and collapse to {{code "width: 100%;"}} when the viewport's width is {{code "767px"}} or lower.
    </p>

    <h3>Regular Grid vs. Responsive Grid</h3>

    <p>
        The first snippet below shows how regular Pure Grids are written. These grids are unresponsive. They'll always be one-thirds, irrespective of the width of the screen. The second snippet replaces the {{code "pure-g"}} with {{code "pure-g-r"}}, thereby making the one-third columns collapse to {{code "width: 100%;"}} on lower screen widths ({{code "767px"}} by default).
    </p>

    {{#code}}
    {{> grids/compare-nr}}
    {{/code}}

    {{#code}}
    {{> grids/compare-r}}
    {{/code}}

    <h3>Responsive Grid: An Example</h3>

    <p>
        Resize the page to see the grid collapse.
    </p>

    {{> grids/four-col}}


    {{sectionHeading "Grids on Mobile"}}

    <p>
        Putting the {{code "pure-g"}} classname on the wrapper instead of {{code "pure-g-r"}} will ensure that grid units will not collapse on small screens. This is a good way to make grids on smaller screens like phones.
    </p>

    {{> grids/mobile-col}}


    {{sectionHeading "Grid Helper Classes"}}

    <p>
        Pure's Responsive Grids also comes with the following helper classes to show or hide content at different screen widths.
    </p>

    <table class="pure-table pure-table-bordered">
        <thead>
            <tr>
                <th>Helper Class Name</th>
                <th>Description</th>
            </tr>
        </thead>

        <tbody>
            <tr>
                <td>{{code "pure-hidden-phone"}}</td>
                <td>
                    Content marked with this class will be hidden below {{code "768px"}}
                </td>
            </tr>

            <tr>
                <td>{{code "pure-hidden-tablet"}}</td>
                <td>
                    Content marked with this class will be hidden between {{code "768px"}} and {{code "979px"}}
                </td>
            </tr>

            <tr>
                <td>{{code "pure-hidden-desktop"}}</td>
                <td>
                    Content marked with this class will be hidden above {{code "980px"}}
                </td>
            </tr>
        </tbody>
    </table>


    {{sectionHeading "Applying Padding and Borders to Grid Units"}}

    <p>
        To add borders and padding to Pure Grids, you have two options. The first option is to nest a {{code "<div>"}} inside each Grid unit and style the child container:
    </p>

    {{#code}}
    {{> grids/padding-nested}}
    {{/code}}

    <p>
        The second option is to add borders and padding directly to a grid unit. This would ordinarily risk breaking the layout, but you can easily avoid this problem by augmenting the behavior of the grid itself with a {{code "box-sizing: border-box"}} rule:
    </p>

    {{#code}}
    {{> grids/padding-box-sizing}}
    {{/code}}

    <p>
        Using {{code "box-sizing: border-box"}} keeps your markup cleaner, but has two minor drawbacks. Legacy browsers such as IE 7 and below <a href="http://caniuse.com/#search=box-sizing">lack support</a> for {{code "box-sizing"}}, and setting this property on all grid units makes it harder to override or unset the value later on. As an unopinionated library, Pure lets {{code "box-sizing"}} remain at the default value of {{code "content-box"}} and leaves the choice up to you.
    </p>


    {{sectionHeading "Using Grids with Custom Fonts"}}

    <p>
        Pure Grids use a specific font stack to ensure the greatest OS/browser compatibility, and by default grid units will have {{code "font-family: sans-serif;"}} applied â€” this is the default font stack Pure's Base (Normalize.css) applies to the {{code "<body>"}}. Fortunately, it's quite easy to make sure your custom font stacks apply to content within Pure Girds. Instead of applying your custom font to only the {{code "<body>"}} element, apply it to the grid units as well:
    </p>

    {{#code}}
    {{> grids/custom-font}}
    {{/code}}


    {{sectionHeading "Want to just use Grids?"}}

    <p>
        Grids is part of the Pure CSS file. However, if you just want Grids and not the other modules, you can pull it down separately. Just include this {{code "<link>"}} element in your {{code "<head>"}}.
    </p>

  {{#code}}
    <link rel="stylesheet" href="http://yui.yahooapis.com/pure/{{pure_version}}/grids-min.css">
  {{/code}}

    <aside>
        <p>
            Optionally, you can head over to the <a href="http://yui.github.io/gridbuilder/">Grid Builder</a> to make your very own grid with custom media query breakpoints and column sizes. Save the outputted CSS in a file and you're good to go!
        </p>
    </aside>

</div>
