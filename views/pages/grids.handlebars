{{setTitle     "Grids"}}
{{setSubTitle  "Fully customizable and responsive CSS grids."}}
{{setActiveNav "grids"}}

{{addLocalCSS "/css/grids.css"}}
{{!addLocalJS  "/js/grids.js"}}

{{> header}}

<div class="content">

    {{sectionHeading "Introduction to Pure Grids"}}

    <p>
        Pure Grids are easy to work with, and very powerful. There are a few simple concepts to keep in mind:
    </p>

    <dl>
        <dt>Grid classes vs. unit classes</dt>
        <dd>
            Pure Grids consist of two types of classes: grid classes ({{code "pure-g"}} or {{code "pure-g-r"}}) and unit classes ({{code "pure-u"}} or {{code "pure-u-*"}})
        </dd>

        <dt>The widths of the units are fractions</dt>
        <dd>
            Units have various class names that represent their widths. For example, {{code "pure-u-1-2"}} has a width of 50%, whereas {{code "pure-u-1-5"}} would have a width of 20%.
        </dd>

        <dt>All child elements of a grid must be units</dt>
        <dd>
            Child elements contained within an element with a {{code "pure-g"}} classname <em>must</em> be a grid unit with a {{code "pure-u"}} or {{code "pure-u-*"}} classname.
        </dd>

        <dt>Content goes inside grid units<dt>
        <dd>
            All content which is visible to people needs to be contained inside a grid unit. This ensures that the content will be rendered properly.
        </dd>
    </dl>

    <aside>
        <p>
            When setting a {{code "font-family"}} in your project, be sure to check out the section on <a href="#using-grids-with-custom-fonts">using Grids with your font-family</a>.
        </p>
    </aside>

    <p>
        Let's start with a simple example. Here's a grid with three columns:
    </p>

    {{#code}}
    {{> grids/intro}}
    {{/code}}


    {{sectionHeading "Grids Units Sizes"}}

    <p>
        Pure ships with both a <b>5ths</b> and <b>24ths</b> based grid. Depicted below are the available units that can be appended to the <b>{{code "pure-u-*"}}</b> classname where {{code "*"}} is one of the unit factions listed below. For example the unit classname for 50% width is: {{code "pure-u-1-2"}}.
    </p>

  {{!
    <p class="pure-form">
        <label>
            <input class="grids-show-all" type="checkbox" checked>
            Show All Grids Units
        </label>
    </p>
  }}

    <h3>5ths-Based Units</h3>

  {{#each pure.gridunits.n5}}
    {{> grids/grids-unit}}
  {{/each}}

    <h3>24ths-Based Units</h3>

  {{#each pure.gridunits.n24}}
    {{> grids/grids-unit}}
  {{/each}}

    <h3>Custom Unit Sizes</h3>
    <p>
        We are working on building tools to allow people to customize Pure Grids. The first low-level tools, the <b><a href="https://github.com/ericf/rework-pure-grids">Pure Grids Rework Plugin</a></b>, is available to use today&mdash;we use this tool to generate Pure's built-in unit sizes.
    </p>


    {{sectionHeading "Pure Responsive Grids"}}

    <p>
        Pure has a mobile-first responsive grid system that can be used declaratively through CSS class names. It's a robust and flexible grid  that builds on top of the default grid.
    </p>

    <h3>Including on Your Page</h3>
    <p>
        Since media queries cannot be over-written, we <u>do not</u> include the grid system as part of {{code "pure.css"}}. You'll have to pull it in as a separate CSS file. You can do this by adding the following {{code "<link>"}} tag to your page.
    </p>

</div>

<div class="is-code-full">
    {{#code wrap=true}}
      <link rel="stylesheet" href="http://yui.yahooapis.com/pure/{{pure.version}}/grids-responsive-min.css">
    {{/code}}
</div>

<div class="content">

    {{> grids/combo}}

    <h3>Pure's Regular Grid vs. Responsive Grid</h3>

    <p>
        The best way to understand the difference between Pure's regular grid and a responsive grid is through an example.The snippet below shows how regular Pure Grids are written. These grids are unresponsive. They'll always be {{code "width: 33.33%"}}, irrespective of the width of the screen.
    </p>

    {{#code}}
    {{> grids/compare-nr}}
    {{/code}}

    <p>
        Next, let's look at a responsive grid. Elements within this grid will be {{code "width: 100%"}} on small screens, but will shrink to become {{code "width: 33.33%"}} on medium-sized screens and above.
    </p>

    {{#code}}
    {{> grids/compare-r}}
    {{/code}}

    <h3>Default Media Queries</h3>

    <p>
        When using Responsive Grids, you can control how the grid behaves at specific breakpoints by adding class names. Pure's default responsive grids comes with the following class names and media query breakpoints.
    </p>

    <div class="table-responsive">
        {{> grids/mq-table}}
    </div>

    <aside>
        <p>
            If you want to customize these media query breakpoints, head over to the <a href="/start/#define-your-custom-grid">Get Started</a> page and generate your own custom grid.
        </p>
    </aside>

    <h3>Responsive Grids: An Example</h3>

    <p>
        The example below leverages Pure's Responsive Grid to create a row with four columns. The columns stack on small screens, take up {{code "width: 50%"}} on medium-sized screens, and {{code "width: 25%"}} on large screens.
    </p>

    <p>
        This is done by adding the {{code ".pure-u-1"}} class for small screens, {{code ".pure-u-md-1-2"}} for medium-sized screens, and {{code ".pure-u-lg-1-4"}} for large screens. <em>Resize the page to see the grid respond to the screen size.</em>
    </p>
</div>

<div class="grids-example">
    {{> grids/four-col}}
</div>

<div class="content">

    {{sectionHeading "Grids on Mobile"}}

    <p>
        Pure's default grid system is mobile-first. If you want to have a grid on small screens, just use the {{code "pure-u-*"}} classnames on your elements.
    </p>

</div>

<div class="grids-example">
    {{> grids/mobile-col}}
</div>

<div class="content">
    {{sectionHeading "Responsive Images"}}

    <p>
        When using Responsive Grids, you'll want your images to be fluid as well so they grow and shrink with the content, while maintaining the correct ratio. To do this, just add the {{code ".pure-img"}} class on them. Check out the example below.
    </p>
</div>

<div class="grids-example">
    {{> grids/images}}
</div>

<div class="content">
    {{sectionHeading "Applying Padding and Borders to Grid Units"}}

    <p>
        To add borders and padding to Pure Grids, you have two options. The first option is to nest a {{code "<div>"}} inside each Grid unit and style the child container:
    </p>

    {{#code}}
    {{> grids/padding-nested}}
    {{/code}}

    <p>
        The second option is to add borders and padding directly to a grid unit. This would ordinarily risk breaking the layout, but you can easily avoid this problem by augmenting the behavior of the grid itself with a {{code "box-sizing: border-box"}} rule:
    </p>

    {{#code}}
    {{> grids/padding-box-sizing}}
    {{/code}}

    <p>
        Using {{code "box-sizing: border-box"}} keeps your markup cleaner, but has two minor drawbacks. Legacy browsers such as IE 7 and below <a href="http://caniuse.com/#search=box-sizing">lack support</a> for {{code "box-sizing"}}, and setting this property on all grid units makes it harder to override or unset the value later on. As an unopinionated library, Pure lets {{code "box-sizing"}} remain at the default value of {{code "content-box"}} and leaves the choice up to you.
    </p>


    {{sectionHeading "Using Grids with Your Font-Family" id="using-grids-with-custom-fonts" }}

    <p>
        Pure Grids use a specific font stack to ensure the greatest OS/browser compatibility, and by default grid units will have {{code "font-family: sans-serif;"}} applied â€” this is the default font stack Pure's Base (Normalize.css) applies to {{code "<html>"}}, {{code "<button>"}}, {{code "<input>"}}, {{code "<select>"}}, and {{code "<textarea>"}} elements. Fortunately, it's quite easy to make sure your project's font stack applies to all content when using Pure. Instead of applying your {{code "font-family"}} to only the {{code "<body>"}} element, apply it like this:
    </p>

    {{#code}}
    {{> grids/custom-font}}
    {{/code}}


    {{sectionHeading "Want to just use Grids?"}}

    <p>
        Grids is part of the Pure CSS file. However, if you just want Grids and not the other modules, you can pull it down separately. Just include this {{code "<link>"}} element in your {{code "<head>"}}.
    </p>

  {{#code wrap=true}}
    <link rel="stylesheet" href="http://yui.yahooapis.com/combo?pure/{{pure.version}}/grids-min.css&pure/{{pure.version}}/grids-responsive-min.css">
  {{/code}}

    <aside>
        <p>
            Optionally, you can head over to the <a href="/start/#define-your-custom-grid">Get Started</a> page to make your very own grid with custom media query breakpoints and column sizes. Download the CSS and HTML file when you're done and get started quickly!
        </p>
    </aside>

</div>
